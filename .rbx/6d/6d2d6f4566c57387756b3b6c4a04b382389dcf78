!RBIX
8275035246457868821
18
M
1
n
n
x
10
__script__
i
55
5
7
0
65
48
50
1
1
15
5
7
2
65
48
50
1
1
15
5
7
3
65
48
50
1
1
15
5
7
4
65
48
50
1
1
15
100
7
5
1
66
50
6
3
57
7
12
66
2
50
8
3
15
2
11
I
4
I
0
I
0
I
0
I
0
n
p
9
s
E
8
US-ASCII
6
thread
x
7
require
s
E
8
US-ASCII
39
active_support/core_ext/module/aliasing
s
E
8
US-ASCII
45
active_support/core_ext/array/extract_options
s
E
8
US-ASCII
42
active_support/core_ext/module/deprecation
x
6
Module
x
10
open_class
M
1
p
2
x
15
for_module_body
t
n
x
6
Module
i
24
5
67
100
7
0
7
1
66
68
50
2
0
50
3
4
15
5
7
0
48
50
4
1
11
I
5
I
0
I
0
I
0
I
0
n
p
5
x
11
synchronize
M
1
n
n
x
11
synchronize
i
52
20
0
50
0
0
19
1
15
20
1
45
1
50
2
1
13
9
28
15
20
1
7
3
50
4
1
19
2
9
33
1
8
43
5
45
5
7
6
65
48
50
7
2
15
20
0
57
8
51
9
0
11
I
6
I
3
I
0
I
0
I
0
I
0
p
10
x
16
extract_options!
x
4
Hash
x
5
is_a?
x
4
with
x
2
[]
x
13
ArgumentError
s
E
8
US-ASCII
136
Synchronization needs a mutex. Supply an options hash with a :with key as the last argument (e.g. synchronize :hello, :with => :@mutex).
x
5
raise
M
1
p
2
x
9
for_block
t
n
x
11
synchronize
i
161
58
19
0
15
20
0
50
0
0
7
1
13
71
9
27
15
44
46
2
7
3
79
50
4
2
6
1
7
5
65
50
6
2
4
5
79
99
7
2
14
2
35
2
18
2
17
2
19
1
15
19
2
15
15
5
20
1
48
102
0
7
8
20
2
48
102
0
64
3
48
50
9
1
9
93
5
45
10
20
0
48
102
0
7
11
64
2
48
50
12
2
8
94
1
15
5
7
13
20
1
48
102
0
7
14
20
2
48
102
0
7
15
21
1
2
48
102
0
7
16
20
1
48
102
0
7
8
20
2
48
102
0
7
17
64
11
66
50
18
0
4
33
80
50
19
1
48
50
20
3
15
5
20
0
7
21
48
50
22
2
11
I
10
I
3
I
1
I
0
I
1
n
p
23
x
4
to_s
n
x
6
Regexp
s
E
8
US-ASCII
8
([?!=])$
x
3
new
s
E
8
US-ASCII
0

x
3
sub
x
24
regexp_last_match_result
s
E
8
US-ASCII
24
_without_synchronization
x
15
method_defined?
x
13
ArgumentError
s
E
8
US-ASCII
76
 is already synchronized. Double synchronization is not currently supported.
x
5
raise
s
E
8
US-ASCII
12
        def 
s
E
8
US-ASCII
21
_with_synchronization
s
E
8
US-ASCII
79
(*args, &block)     # def expire_with_synchronization(*args, &block)
          
s
E
8
US-ASCII
105
.synchronize do                                                    #   @@lock.synchronize do
            
s
E
8
US-ASCII
251
(*args, &block)  #     expire_without_synchronization(*args, &block)
          end                                                                       #   end
        end                                                                         # end

x
11
active_path
x
1
+
x
11
module_eval
x
15
synchronization
x
18
alias_method_chain
p
25
I
-1
I
1a
I
4
I
1b
I
36
I
1d
I
4b
I
1e
I
5d
I
1d
I
5e
I
0
I
5f
I
21
I
60
I
22
I
70
I
23
I
78
I
24
I
88
I
21
I
97
I
29
I
a1
x
109
/home/fsm/.rvm/gems/rbx-2.0.0/gems/activesupport-3.2.13/lib/active_support/core_ext/module/synchronization.rb
p
3
x
6
method
x
14
aliased_method
x
11
punctuation
x
4
each
p
13
I
-1
I
14
I
0
I
15
I
8
I
16
I
21
I
17
I
2b
I
0
I
2c
I
1a
I
34
x
109
/home/fsm/.rvm/gems/rbx-2.0.0/gems/activesupport-3.2.13/lib/active_support/core_ext/module/synchronization.rb
p
3
x
7
methods
x
7
options
x
4
with
x
17
method_visibility
x
15
add_defn_method
x
9
deprecate
p
5
I
2
I
14
I
10
I
2c
I
18
x
109
/home/fsm/.rvm/gems/rbx-2.0.0/gems/activesupport-3.2.13/lib/active_support/core_ext/module/synchronization.rb
p
0
x
10
call_under
p
11
I
0
I
1
I
9
I
2
I
12
I
3
I
1b
I
4
I
24
I
6
I
37
x
109
/home/fsm/.rvm/gems/rbx-2.0.0/gems/activesupport-3.2.13/lib/active_support/core_ext/module/synchronization.rb
p
0
